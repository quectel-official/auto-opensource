--- a/util-linux/mdev.c	2020-03-25 10:47:34.780744000 +0800
+++ b/util-linux/mdev.c	2020-03-25 10:56:05.808130179 +0800
@@ -99,6 +99,7 @@
 #include "common_bufsiz.h"
 #include "xregex.h"
 
+#include <selinux/label.h>
 /* "mdev -s" scans /sys/class/xxx, looking for directories which have dev
  * file (it is of the form "M:m\n"). Example: /sys/class/tty/tty0/dev
  * contains "4:0\n". Directory name is taken as device name, path component
@@ -540,6 +541,33 @@
 	return alias;
 }
 
+#define SELINUX_FILECONTEXT "/etc/selinux/mls/contexts/files/file_contexts"
+static void make_device_xattr_selinux(char *node_name, int type)
+{
+    char *contextfile = strdup(SELINUX_FILECONTEXT);
+    char *sepath = NULL;
+    char *secontext = NULL;
+    struct selabel_handle *sehnd = NULL;//selinux handler
+    struct selinux_opt seopt[] = {{ SELABEL_OPT_PATH, contextfile }};
+    if (access(SELINUX_FILECONTEXT, F_OK) == 0)
+    {       
+        if ((sehnd = selabel_open(SELABEL_CTX_FILE, seopt, 1)) != NULL)
+        {
+            asprintf(&sepath, "/dev/%s", node_name);
+            if (selabel_lookup(sehnd, &secontext, sepath, type) < 0)
+            {
+                secontext = strdup("u:object_r:device_t");
+            }
+            setfilecon(sepath, secontext);
+            selabel_close(sehnd);
+            freecon(secontext);
+            free(sepath);
+            free(contextfile);
+        }
+    
+    }
+}
+
 /* mknod in /dev based on a path like "/sys/block/hda/hda1"
  * NB1: path parameter needs to have SCRATCH_SIZE scratch bytes
  * after NUL, but we promise to not mangle it (IOW: to restore NUL if needed).
@@ -759,6 +787,7 @@
 			}
 			if (mknod(node_name, rule->mode | type, makedev(major, minor)) && errno != EEXIST)
 				bb_perror_msg("can't create '%s'", node_name);
+            make_device_xattr_selinux(node_name, rule->mode | type);
 			if (ENABLE_FEATURE_MDEV_CONF) {
 				chmod(node_name, rule->mode);
 				chown(node_name, rule->ugid.uid, rule->ugid.gid);
